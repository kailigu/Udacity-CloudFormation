# CloudFormation Script
# Project: UdacityProject2
# Stack Name: UdacityStackProject2-WebApp
# Created by: Sasho Petrovski

# Web application script
Description:
  < Sasho Petrovski
  Udacity Project 2
  Website Application

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names.
    Type: String
    
  ProjectName:
    Description: The project name you're working on.
    Type: String

  EC2AccessKeyPair:
    Description: The Key Pair name used to access the EC2 via SSH.
    Type: String

  EC2InstanceProfileRole:
    Description: IAM Role profile to be used when launching an EC2 Instance.
    Type: String

  
   
Resources:
# EC2 Launch Configuration
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref EC2AccessKeyPair
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip
      # Ubuntu Server 18.04 LTS (HVM), SSD Volume Type
      ImageId: ami-00a54827eb7ffcd3c
      IamInstanceProfile: !Ref EC2InstanceProfileRole
      SecurityGroups:
      - Fn::ImportValue: 
          !Sub "${ProjectName}-WebSecurityGroupID"
      InstanceType: t2.medium
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
  
  # AutoScaling Group        
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      # A list of subnet IDs for a virtual private cloud (VPC)
      VPCZoneIdentifier: [subnet-08087d94b56f2af43]
        # Fn::ImportValue: !Sub "UdacityProject2-Public-Subnet-1-CIDR"
        # Fn::Join: ['', [ '[' , Fn::ImportValue: !Sub '${ProjectName}-Public-Subnet-CIDRs', ']']]
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      MinSize: '2'
      MaxSize: '6'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
  
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "UdacityProject2-Public-Subnet-1-ID"
      - Fn::ImportValue: !Sub "UdacityProject2-Public-Subnet-2-ID"
      SecurityGroups:
      - Fn::ImportValue: !Sub "UdacityProject2-LBSecurityGroupID"
    
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppLB
      Port: '80'
      Protocol: HTTP
  
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1

  WebAppTargetGroup:
  ## Checks for an HTTP response
    Type: AWS::ElasticLoadBalancingV2::TargetGroup # Property of an autoscaling group
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: / # Filepath of what you want to check.
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-VPCID"

Outputs:

  LoadBalancerDNS:
    Description: The URL of the Udagram Site
    Value: 
      !Sub
        - 'http://${LoadBalancerDNS}'
        - {LoadBalancerDNS: !GetAtt 'WebAppLB.DNSName'}
    Export:
      Name: !Sub "${ProjectName}-SiteURL"


